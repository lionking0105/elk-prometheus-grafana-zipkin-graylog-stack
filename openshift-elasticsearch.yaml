apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd:
          kompose -o openshift-elasticsearch.yaml --provider openshift --file
          docker-compose.yml convert -v
        kompose.version: 1.18.0 (06a2e56)
      creationTimestamp: null
      labels:
        io.kompose.service: elasticsearch
      name: elasticsearch
    spec:
      ports:
        - name: "9200"
          port: 9200
          targetPort: 9200
        - name: "9300"
          port: 9300
          targetPort: 9300
      selector:
        io.kompose.service: elasticsearch
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        kompose.cmd:
          kompose -o openshift-elasticsearch.yaml --provider openshift --file
          docker-compose.yml convert -v
        kompose.version: 1.18.0 (06a2e56)
      creationTimestamp: null
      labels:
        io.kompose.service: elasticsearch
      name: elasticsearch
    spec:
      replicas: 1
      selector:
        io.kompose.service: elasticsearch
      strategy:
        resources: {}
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.service: elasticsearch
        spec:
          containers:
            - env:
                - name: discovery.type
                  value: single-node
                - name: http.cors.allow-credentials
                  value: "true"
                - name: http.cors.allow-headers
                  value: X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
                - name: http.cors.enabled
                  value: "true"
                - name: http.port
                  value: "9200"
              image: " "
              name: elasticsearch
              ports:
                - containerPort: 9200
                - containerPort: 9300
              resources: {}
              volumeMounts:
                - mountPath: /usr/share/elasticsearch/data
                  name: elasticsearch-data
          restartPolicy: Always
          volumes:
            - name: elasticsearch-data
              persistentVolumeClaim:
                claimName: elasticsearch-data
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - elasticsearch
            from:
              kind: ImageStreamTag
              name: elasticsearch:6.8.1
          type: ImageChange
    status: {}
  - apiVersion: v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: elasticsearch
      name: elasticsearch
    spec:
      tags:
        - annotations: null
          from:
            kind: DockerImage
            name: docker.elastic.co/elasticsearch/elasticsearch:6.8.1
          generation: null
          importPolicy: {}
          name: 6.8.1
    status:
      dockerImageRepository: ""
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: elasticsearch-data
      name: elasticsearch-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
kind: List
metadata: {}
